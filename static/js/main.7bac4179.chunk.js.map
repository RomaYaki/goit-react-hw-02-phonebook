{"version":3,"sources":["components/Filter/Filter.module.css","components/MyForm/MyForm.js","components/Filter/Filter.js","components/ContactsList/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js","components/MyForm/MyForm.module.css","components/ContactsList/ContactItem/ContactItem.module.css"],"names":["module","exports","MyForm","state","name","number","onSubmit","e","preventDefault","props","formReset","setState","onChange","currentTarget","value","this","className","styles","form","lebels","type","pattern","title","required","btn","Component","Filter","onFilter","placeholder","filter","ContactItem","contacts","onDeleteClick","map","id","item","contacts_button","onClick","ContactsList","App","onSubmitForm","contact","uuidv4","some","i","alert","console","log","onFilterInput","onFilterChange","toLowerCase","includes","onDeleteContactClick","prevState","el","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bac4179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MyForm.module.css';\n\nexport class MyForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  onChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.onSubmit} className={styles.form}>\n        <label className={styles.lebels}>\n          Name:\n          <input\n            type=\"text\"\n            onChange={this.onChange}\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.lebels}>\n          Number:\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={this.onChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" onSubmit={this.onSubmit} className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default MyForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nexport const Filter = ({ value, onFilter }) => {\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      placeholder=\"Filter\"\n      onChange={onFilter}\n      className={styles.filter}\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport styles from './ContactItem.module.css';\nconst ContactItem = ({ contacts, onDeleteClick }) =>\n  contacts.map(({ id, name, number }) => {\n    return (\n      <li key={id} className={styles.item}>\n        {name}: {number}\n        <button\n          className={styles.contacts_button}\n          onClick={() => onDeleteClick(id)}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem/ContactItem';\n\nexport const ContactsList = ({ contacts, onDeleteClick }) => (\n  <ul>\n    <ContactItem contacts={contacts} onDeleteClick={onDeleteClick} />\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport MyForm from './components/MyForm/MyForm';\nimport {Filter} from './components/Filter/Filter';\nimport {ContactsList} from './components/ContactsList/ContactsList';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onSubmitForm = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    contacts.some(i => i.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n    console.log(contact);\n  };\n\n  onFilterInput = e => {\n    const value = e.currentTarget.value;\n    this.setState({ filter: value });\n  };\n\n  onFilterChange = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(i =>\n      i.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  onDeleteContactClick = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    const contacts = this.onFilterChange();\n    const { filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <MyForm onSubmit={this.onSubmitForm} />\n        <Filter value={filter} onFilter={this.onFilterInput} />\n        <h2>Contacts</h2>\n        <ContactsList\n          contacts={contacts}\n          onDeleteClick={this.onDeleteContactClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MyForm_form__1XijP\",\"btn\":\"MyForm_btn__1AiPf\",\"lebels\":\"MyForm_lebels__3QyUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_button\":\"ContactItem_contacts_button__1IWVZ\",\"item\":\"ContactItem_item__3I-E_\"};"],"sourceRoot":""}